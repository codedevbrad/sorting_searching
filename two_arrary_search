// o log n
// iterate over an array and match item to another array with better time complexity.

// iterate over an array of objects x and place all values from other array y that match x property.
    // old method: iterate over x, and save all values of y that match using 
          filter y with x.property === y.property.
    // issue: we're looping all values of y with each iteration of x. this is not needed. 
             // we can ignore values of y that we know have already been added to an x iterated obj.
    // new method: iterate over x, 
                   // if we filter values from y to an x obj. 
                        // y is clone of y..
                        // save array y without the filtered values from previous x filter.
                        
                   // if we use a binary search on y, we need to sort them first. which takes longer than a simple for loop.
                       and we're still starting with the same amount of values for y with each x object.
                       
//       
